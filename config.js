// config.js - Configuration for language and theme settings

// Language configuration
const translations = {
    en: {
        // Header
        "appTitle": "foxfile.org",
        "appDescription": "Secure end-to-end encrypted file sharing.",
        
        // Upload section
        "shareFile": "Share File",
        "selectFilePrompt": "Click or drag to select a file",
        "selectedFile": "Selected file:",
        "shareButton": "Share File",
        "shareCode": "Share code:",
        "waitingForReceiver": "Waiting for receiver connection...",
        "receiverConnected": "Receiver connected. Exchanging keys & signals...",
        "sendingFile": "Sending file...",
        "fileSuccessfullySent": "File successfully sent to receiver!",
        "sendingProgress": "Sending {percent}%...",
        
        // Download section
        "downloadFile": "Download File",
        "enterShareCode": "Enter share code",
        "shareCodePlaceholder": "e.g. XYZ123",
        "connectAndDownload": "Connect and Download",
        "connecting": "Connecting...",
        "receivingFile": "Receiving file...",
        "transferComplete": "File transfer complete!",
        "startDownload": "Start Download",
        "downloadStarted": "Download started automatically",
        "clickToDownload": "Automatic download failed. Click button to download.",
        "fileReceivedAssembling": "File received. Assembling...",
        "downloadButtonText": "Download {filename}",
        "transferSuccessMessage": "File '{filename}' received successfully!",

        // Info section
        "howItWorks": "How It Works?",
        "step1Title": "1. File Selection & Code",
        "step1Text": "Sender selects a file. A unique share code is generated by the server.",
        "step2Title": "2. Code Sharing",
        "step2Text": "The sender shares the code with the receiver.",
        "step3Title": "3. Secure Connection",
        "step3Text": "Receiver enters the code. A secure WebSocket connection links both users via the server.",
        "step4Title": "4. Secure P2P Transfer",
        "step4Text": "Once securely connected, the encrypted file is transferred directly between devices (P2P).",
        "securityTitle": "Security",
        "securityText": "Files are encrypted directly in your browser using a securely exchanged key (AES-GCM) before transfer via WebRTC. Only the intended receiver can decrypt them. The server facilitates the connection but never sees your file content or the decryption key. Metadata (filename, size) is sent unencrypted over the secure data channel *after* connection.",
        "principleTitle": "Working Principle",
        "principleText": "You connect to our server via WebSocket using a share code to find the other peer. The server relays messages for secure key exchange (ECDH) and WebRTC connection setup (using STUN/TURN servers). Once the secure WebRTC data channel is established, the encrypted file is transferred directly peer-to-peer.",
        "technologiesTitle": "Why Donation is Needed?",
        "technologiesText": "FoxFile is developed by an independent developer and is completely free. We need your support to cover server costs and keep the project sustainable.",
        
        // Footer
        "footerText": "foxfile.org Â© 2025 | End-to-end encrypted, peer-to-peer file sharing application",
        
        // Notifications
        "codeCopied": "Code copied",
        "codeCreated": "Share code created",
        "pleaseSelectFile": "Please select a file",
        "invalidCodeFormat": "Invalid code format",
        "connectionError": "Connection error occurred",
        "fileReadError": "File reading error",
        "scanQrCodePrompt": "Scan to download",
        "downloadSuccessReceiver": "File downloaded successfully!",
        // E2E Crypto & Connection Status
        "generatingCode": "Generating code...",
        "connectingToSender": "Connecting to sender...",
        "codeReceivedFromUrl": "Code received from URL, connecting...",
        "keyGenerationError": "Error generating encryption keys",
        "keyExchangeError": "Error during secure key exchange",
        "keyExchangeIncomplete": "Secure connection not ready",
        "secureConnectionEstablishedSending": "Secure connection established. Preparing to send...",
        "secureConnectionEstablishedWaiting": "Secure connection established. Waiting for file...",
        "encryptionError": "File encryption error",
        "decryptionError": "File decryption error",
        "downloadSetupError": "Error preparing file for download",
        "transferError": "File transfer error",
        "receiverConnectedInitiatingKeyExchange": "Receiver connected. Starting secure key exchange...",
        "connectedToSenderInitiatingKeyExchange": "Connected to sender. Starting secure key exchange...",
        "downloadStarting": "Download starting...",
        "fileSentWaitingConfirmation": "File sent. Waiting for receiver confirmation...",
        "transferSuccessPrompt": "File sent successfully! Select another file to share again.",
        "transferStarted": "File transfer started.",
        "channelsNotReady": "Data channels not ready yet.",
        "metadataError": "Metadata processing error.",
        "sendFileError": "Cannot send file. Prerequisites not met.",
        "chunkReadSendError": "Error reading or sending file chunk.",
        "fileSentWaiting": "File sending complete. Waiting for receiver...",
        "transferAbortedChannelClose": "Transfer aborted due to channel closure.",
        "channelError": "Data channel error",
        "transferAborted": "File transfer aborted.",
        "chunkDecryptError": "Chunk decryption failed.",
        "receiveError": "Error receiving file chunk.",
        "fileAssemblyError": "Error assembling received file.",
        "connectionInterrupted": "Connection interrupted.",
        "peerConnectionError": "Peer connection setup failed.",
        
        // Popup translations
        "successTitle": "Success!",
        "okButton": "OK",
        // Donation Button
        "donateButton": "Support Us",
        "donateTooltipTitle": "If You Love This Project, You Can Support It!",
        "donateTooltipLine1": "FoxFile is developed by an independent developer and is completely free.",
        "donateTooltipLine2": "We need your support to cover server costs and keep the project sustainable.",
        
        // Connection System Accordion
        "connectionSystemTitle": "How Connections are Established",
        "connectionSystemHowTitle": "How Connection System Works?",
        "sameNetworkTitle": "On the Same Local Network (LAN):",
        "sameNetworkText": "When two computers are on the same local network (e.g., same Wi-Fi), STUN servers help discover their IP addresses, and a direct connection can typically be established easily. This process works as follows:",
        "sameNetworkStep1": "Both sender and receiver connect to our server via WebSocket.",
        "sameNetworkStep2": "The share code is used for matching.",
        "sameNetworkStep3": "Our STUN servers discover the local IP addresses of both parties.",
        "sameNetworkStep4": "WebRTC connection is established, and the file is transferred directly between peers.",
        "differentNetworkTitle": "On Different Networks:",
        "differentNetworkText": "When computers are on different networks (e.g., different locations, behind NAT or firewalls), the connection process is more complex:",
        "differentNetworkStep1": "WebSocket connection to our server and matching via share code works the same way.",
        "differentNetworkStep2": "STUN servers first try to establish a direct connection, but most NAT devices and firewalls may block this.",
        "differentNetworkStep3": "If direct connection cannot be established, our TURN servers come into play.",
        "differentNetworkStep4": "TURN servers act as a relay to bypass NAT and firewalls - communication between the two parties is relayed through these servers.",
        "differentNetworkStep5": "File transfer occurs securely and encrypted via our TURN servers.",
        "technicalDetailsTitle": "Technical Details:",
        "technicalDetailsText": "FoxFile ensures secure connections using these technologies:",
        "technicalDetailWebRTC": "WebRTC: For browser-based real-time communication",
        "technicalDetailSTUN": "STUN Servers: To discover the actual addresses of devices behind NAT",
        "technicalDetailTURN": "TURN Servers: To relay traffic when direct connection cannot be established",
        "technicalDetailDTLS": "DTLS: Transport layer security for data channel",
        "technicalDetailAES": "AES-GCM: End-to-end encryption for file contents",
        "analyticsTitle": "Analytics:",
        "analyticsText": "We use GoatCounter, which is a privacy-focused analytics tool:",
        "analyticsNoCookies": "No cookies are used",
        "analyticsAnonymous": "IPs are anonymized while still providing country-based location information",
        
        // Terms and Privacy
        "termsTitle": "Terms of Service and Privacy Policy",
        "termsOfService": "Terms of Service",
        "termsDate": "Effective Date: April 20, 2025",
        "termsPartiesTitle": "1. Parties and Acceptance",
        "termsPartiesText": "This agreement is between [Foxfile.org] ('Platform') and the natural or legal person ('User') using the Platform. By accessing the Platform or using its services, the User declares that they have read, understood, and accepted all provisions of this agreement.",
        "termsServiceTitle": "2. Service Description",
        "termsServiceText": "The Platform provides an intermediary service for encrypted and instant file sharing between users. Shared files are not stored on Platform servers; they are only transmitted directly between users.",
        "termsConditionsTitle": "3. Terms of Use",
        "termsConditions1": "3.1. The User undertakes to use the Platform only for purposes that comply with the law.",
        "termsConditions2": "3.2. The User guarantees that all content shared through the Platform complies with the law and does not infringe the rights of third parties.",
        "termsConditions3": "3.3. The User will refrain from the following actions when using the Platform:",
        "termsConditionsItem1": "Sharing content that infringes copyright or other intellectual property rights",
        "termsConditionsItem2": "Sharing obscene, offensive, misleading, or illegal content",
        "termsConditionsItem3": "Sharing malware, viruses, or similar harmful content",
        "termsDisclaimerTitle": "4. Disclaimer",
        "termsDisclaimer1": "4.1. The Platform does not accept any responsibility for the accuracy, security, or legality of content shared by users.",
        "termsDisclaimer2": "4.2. The User is exclusively responsible for all transactions and shares made using the Platform.",
        "termsDisclaimer3": "4.3. The Platform does not guarantee that the service will be uninterrupted or error-free and cannot be held responsible for direct or indirect damages arising from the use of the service.",
        "termsIntellectualTitle": "5. Intellectual Property Rights",
        "termsIntellectualText": "All content, designs, software, and other materials on the Platform belong to the Platform and are protected by copyright laws. The User may not copy, distribute, or modify the Platform's software, design, or content without permission.",
        "termsModificationTitle": "6. Modification of the Agreement",
        "termsModificationText": "The Platform reserves the right to unilaterally change the provisions of this agreement at any time. The updated agreement takes effect on the date it is published on the Platform, and the User is deemed to have accepted the updated agreement by continuing to use the Platform.",
        "termsJurisdictionTitle": "7. Applicable Law and Jurisdiction",
        "termsJurisdictionText": "This agreement is subject to the laws of the Republic of Turkey. The parties accept that Istanbul (ÃaÄlayan) Courts and Enforcement Offices have jurisdiction to resolve any disputes arising from this agreement.",
        
        "privacyTitle": "Privacy Policy",
        "privacyCollectionTitle": "1. Collected Data",
        "privacyCollectionText": "The Platform does not collect personal data to identify users. However, technical data such as IP addresses and connection times may be temporarily recorded for the provision of the service.",
        "privacyUseTitle": "2. Use of Data",
        "privacyUseText": "Collected technical data is used only to ensure the security of the service and to fulfill legal obligations. This data is not shared with third parties, sold, or used for commercial purposes.",
        "privacyStorageTitle": "3. Data Storage",
        "privacyStorageText": "Collected technical data is not stored for a specific period except for legal obligations and is regularly deleted.",
        "privacyThirdPartyTitle": "4. Third-Party Links",
        "privacyThirdPartyText": "The Platform may contain links to third-party websites. The Platform is not responsible for the privacy practices of these sites. Users should review the privacy policies of these sites.",
        
        // Terms Checkbox
        "termsCheckboxLabel": "I have read and agree to the Terms of Service and Privacy Policy",
        "termsLink": "Read Terms",
        "termsCheckboxRequired": "You must accept the Terms of Service to share files"
    },
    tr: {
        // Header
        "appTitle": "foxfile.org",
        "appDescription": "GÃ¼venli uÃ§tan uca Åifreli dosya paylaÅÄ±mÄ±.",
        
        // Upload section
        "shareFile": "Dosya PaylaÅ",
        "selectFilePrompt": "Dosya seÃ§mek iÃ§in tÄ±klayÄ±n veya sÃ¼rÃ¼kleyin",
        "selectedFile": "SeÃ§ilen dosya:",
        "shareButton": "Dosya PaylaÅ",
        "shareCode": "PaylaÅÄ±m kodu:",
        "waitingForReceiver": "AlÄ±cÄ± baÄlantÄ±sÄ± bekleniyor...",
        "receiverConnected": "AlÄ±cÄ± baÄlandÄ±. Anahtar ve sinyal alÄ±ÅveriÅi yapÄ±lÄ±yor...",
        "sendingFile": "Dosya gÃ¶nderiliyor...",
        "fileSuccessfullySent": "Dosya baÅarÄ±yla alÄ±cÄ±ya iletildi!",
        "sendingProgress": "GÃ¶nderiliyor {percent}%...",
        
        // Download section
        "downloadFile": "Dosya Ä°ndir",
        "enterShareCode": "PaylaÅÄ±m kodunu girin",
        "shareCodePlaceholder": "Ãrn: XYZ123",
        "connectAndDownload": "BaÄlan ve Ä°ndir",
        "connecting": "BaÄlantÄ± kuruluyor...",
        "receivingFile": "Dosya alÄ±nÄ±yor...",
        "transferComplete": "Dosya transferi tamamlandÄ±!",
        "startDownload": "Ä°ndirmeyi BaÅlat",
        "downloadStarted": "Ä°ndirme otomatik olarak baÅladÄ±",
        "clickToDownload": "Otomatik indirme baÅarÄ±sÄ±z. Ä°ndirmek iÃ§in butona tÄ±klayÄ±n.",
        "fileReceivedAssembling": "Dosya alÄ±ndÄ±. BirleÅtiriliyor...",
        "downloadButtonText": "{filename} Ä°ndir",
        "transferSuccessMessage": "'{filename}' dosyasÄ± baÅarÄ±yla alÄ±ndÄ±!",
        
        // Info section
        "howItWorks": "NasÄ±l ÃalÄ±ÅÄ±r?",
        "step1Title": "1. Dosya SeÃ§imi & Kod",
        "step1Text": "GÃ¶nderici bir dosya seÃ§er. Sunucu tarafÄ±ndan benzersiz bir paylaÅÄ±m kodu oluÅturulur.",
        "step2Title": "2. Kod PaylaÅÄ±mÄ±",
        "step2Text": "GÃ¶nderici, paylaÅÄ±m kodunu alÄ±cÄ±ya iletir.",
        "step3Title": "3. GÃ¼venli BaÄlantÄ±",
        "step3Text": "AlÄ±cÄ± kodu girer. Sunucuya kurulan gÃ¼venli WebSocket baÄlantÄ±sÄ± iki kullanÄ±cÄ±yÄ± eÅleÅtirir.",
        "step4Title": "4. GÃ¼venli P2P AktarÄ±m",
        "step4Text": "GÃ¼venli baÄlantÄ± kurulduktan sonra, ÅifrelenmiÅ dosya doÄrudan cihazlar arasÄ±nda (P2P) aktarÄ±lÄ±r.",
        "securityTitle": "GÃ¼venlik",
        "securityText": "Dosyalar, WebRTC Ã¼zerinden aktarÄ±lmadan Ã¶nce gÃ¼venli bir Åekilde deÄiÅtirilen anahtar (AES-GCM) kullanÄ±larak doÄrudan tarayÄ±cÄ±nÄ±zda Åifrelenir. YalnÄ±zca hedef alÄ±cÄ± Åifreyi Ã§Ã¶zebilir. Sunucu baÄlantÄ±yÄ± kolaylaÅtÄ±rÄ±r ancak dosya iÃ§eriÄinizi veya Åifre Ã§Ã¶zme anahtarÄ±nÄ± asla gÃ¶rmez. Meta veriler (dosya adÄ±, boyutu) baÄlantÄ± kurulduktan *sonra* gÃ¼venli veri kanalÄ± Ã¼zerinden Åifresiz gÃ¶nderilir.",
        "principleTitle": "ÃalÄ±Åma Prensibi",
        "principleText": "DiÄer eÅi bulmak iÃ§in paylaÅÄ±m kodunu kullanarak sunucumuza WebSocket Ã¼zerinden baÄlanÄ±rsÄ±nÄ±z. Sunucu, gÃ¼venli anahtar deÄiÅimi (ECDH) ve WebRTC baÄlantÄ± kurulumu (STUN/TURN sunucularÄ± kullanarak) iÃ§in mesajlarÄ± iletir. GÃ¼venli WebRTC veri kanalÄ± kurulduktan sonra, ÅifrelenmiÅ dosya doÄrudan eÅler arasÄ± aktarÄ±lÄ±r.",
        "technologiesTitle": "Neden BaÄÄ±Å Gerekli?",
        "technologiesText": "FoxFile, baÄÄ±msÄ±z bir geliÅtirici tarafÄ±ndan geliÅtirilmiÅtir ve tamamen Ã¼cretsizdir. Sunucu maliyetlerini karÅÄ±lamak ve projeyi sÃ¼rdÃ¼rÃ¼lebilir kÄ±lmak iÃ§in desteÄinize ihtiyacÄ±mÄ±z var.",
        
        // Footer
        "footerText": "foxfile.org Â© 2025 | UÃ§tan uca Åifreli, eÅler arasÄ± dosya paylaÅÄ±m uygulamasÄ±",
        
        // Notifications
        "codeCopied": "Kod kopyalandÄ±",
        "codeCreated": "PaylaÅÄ±m kodu oluÅturuldu",
        "pleaseSelectFile": "LÃ¼tfen bir dosya seÃ§in",
        "invalidCodeFormat": "GeÃ§ersiz kod formatÄ±",
        "connectionError": "BaÄlantÄ± hatasÄ± oluÅtu",
        "fileReadError": "Dosya okuma hatasÄ±",
        "scanQrCodePrompt": "Ä°ndirmek iÃ§in taratÄ±nÄ±z",
        "downloadSuccessReceiver": "Dosya baÅarÄ±yla indirildi!",
        // E2E Crypto & Connection Status (Turkish)
        "generatingCode": "Kod oluÅturuluyor...",
        "connectingToSender": "GÃ¶ndericiye baÄlanÄ±lÄ±yor...",
        "codeReceivedFromUrl": "Kod URL'den alÄ±ndÄ±, baÄlanÄ±lÄ±yor...",
        "keyGenerationError": "Åifreleme anahtarlarÄ± oluÅturulurken hata",
        "keyExchangeError": "GÃ¼venli anahtar deÄiÅimi sÄ±rasÄ±nda hata",
        "keyExchangeIncomplete": "GÃ¼venli baÄlantÄ± hazÄ±r deÄil",
        "secureConnectionEstablishedSending": "GÃ¼venli baÄlantÄ± kuruldu. GÃ¶nderime hazÄ±rlanÄ±lÄ±yor...",
        "secureConnectionEstablishedWaiting": "GÃ¼venli baÄlantÄ± kuruldu. Dosya bekleniyor...",
        "encryptionError": "Dosya Åifreleme hatasÄ±",
        "decryptionError": "Dosya Åifre Ã§Ã¶zme hatasÄ±",
        "downloadSetupError": "Dosya indirmeye hazÄ±rlanÄ±rken hata",
        "transferError": "Dosya aktarÄ±m hatasÄ±",
        "receiverConnectedInitiatingKeyExchange": "AlÄ±cÄ± baÄlandÄ±. GÃ¼venli anahtar deÄiÅimi baÅlatÄ±lÄ±yor...",
        "connectedToSenderInitiatingKeyExchange": "GÃ¶ndericiye baÄlandÄ±. GÃ¼venli anahtar deÄiÅimi baÅlatÄ±lÄ±yor...",
        "downloadStarting": "Ä°ndirme baÅlatÄ±lÄ±yor...",
        "fileSentWaitingConfirmation": "Dosya gÃ¶nderildi. AlÄ±cÄ± onayÄ± bekleniyor...",
        "transferSuccessPrompt": "Dosya baÅarÄ±yla gÃ¶nderildi! Tekrar paylaÅmak iÃ§in baÅka bir dosya seÃ§in.",
        "transferStarted": "Dosya transferi baÅladÄ±.",
        "channelsNotReady": "Veri kanallarÄ± henÃ¼z hazÄ±r deÄil.",
        "metadataError": "Meta veri iÅleme hatasÄ±.",
        "sendFileError": "Dosya gÃ¶nderilemiyor. ÃnkoÅullar saÄlanmadÄ±.",
        "chunkReadSendError": "Dosya parÃ§asÄ± okuma veya gÃ¶nderme hatasÄ±.",
        "fileSentWaiting": "Dosya gÃ¶nderimi tamamlandÄ±. AlÄ±cÄ± bekleniyor...",
        "transferAbortedChannelClose": "Kanal kapanmasÄ± nedeniyle transfer iptal edildi.",
        "channelError": "Veri kanalÄ± hatasÄ±",
        "transferAborted": "Dosya transferi iptal edildi.",
        "chunkDecryptError": "Dosya parÃ§asÄ± Åifre Ã§Ã¶zme hatasÄ±.",
        "receiveError": "Dosya parÃ§asÄ± alma hatasÄ±.",
        "fileAssemblyError": "AlÄ±nan dosya birleÅtirilirken hata.",
        "connectionInterrupted": "BaÄlantÄ± kesildi.",
        "peerConnectionError": "EÅ baÄlantÄ±sÄ± kurulamadÄ±.",

        // Popup translations (Turkish)
        "successTitle": "BaÅarÄ±lÄ±!",
        "okButton": "Tamam",
        // Donation Button (Turkish)
        "donateButton": "Destek Ol",
        "donateTooltipTitle": "Bu Projeyi Sevdiysen Destek Olabilirsin!",
        "donateTooltipLine1": "FoxFile, baÄÄ±msÄ±z bir geliÅtirici tarafÄ±ndan geliÅtirilmiÅtir ve tamamen Ã¼cretsizdir.",
        "donateTooltipLine2": "Sunucu maliyetlerini karÅÄ±lamak ve projeyi sÃ¼rdÃ¼rÃ¼lebilir kÄ±lmak iÃ§in desteÄinize ihtiyacÄ±mÄ±z var.",
        
        // Connection System Accordion
        "connectionSystemTitle": "Sistem BaÄlantÄ±larÄ± NasÄ±l Kurulur",
        "connectionSystemHowTitle": "Sistem BaÄlantÄ±larÄ± NasÄ±l ÃalÄ±ÅÄ±r?",
        "sameNetworkTitle": "AynÄ± Yerel AÄda (LAN):",
        "sameNetworkText": "Ä°ki bilgisayar aynÄ± yerel aÄda (Ã¶rneÄin, aynÄ± Wi-Fi) ise, STUN sunucularÄ± IP adreslerinin keÅfedilmesine yardÄ±mcÄ± olur ve doÄrudan baÄlantÄ± genellikle kolayca kurulabilir. Bu sÃ¼reÃ§ ÅÃ¶yle iÅler:",
        "sameNetworkStep1": "Hem gÃ¶nderici hem de alÄ±cÄ±, sunucumuza WebSocket Ã¼zerinden baÄlanÄ±r.",
        "sameNetworkStep2": "PaylaÅÄ±m kodu, eÅleÅtirme iÃ§in kullanÄ±lÄ±r.",
        "sameNetworkStep3": "STUN sunucularÄ±mÄ±z, her iki tarafÄ±n da yerel IP adreslerini keÅfeder.",
        "sameNetworkStep4": "WebRTC baÄlantÄ±sÄ± kurulur ve dosya doÄrudan eÅler arasÄ±nda aktarÄ±lÄ±r.",
        "differentNetworkTitle": "FarklÄ± AÄlarda:",
        "differentNetworkText": "Bilgisayarlar farklÄ± aÄlarda ise (Ã¶rneÄin, farklÄ± konumlarda, NAT arkasÄ±nda veya gÃ¼venlik duvarlarÄ± ile), baÄlantÄ± sÃ¼reci daha karmaÅÄ±ktÄ±r:",
        "differentNetworkStep1": "Sunucumuza WebSocket baÄlantÄ±sÄ± ve paylaÅÄ±m kodu ile eÅleÅtirme aynÄ± Åekilde Ã§alÄ±ÅÄ±r.",
        "differentNetworkStep2": "STUN sunucularÄ± Ã¶nce doÄrudan baÄlantÄ± kurmayÄ± dener, ancak Ã§oÄu NAT cihazÄ± ve gÃ¼venlik duvarÄ± bunu engelleyebilir.",
        "differentNetworkStep3": "DoÄrudan baÄlantÄ± kurulamazsa, TURN sunucularÄ±mÄ±z devreye girer.",
        "differentNetworkStep4": "TURN sunucularÄ±, NAT ve gÃ¼venlik duvarlarÄ±nÄ± aÅmak iÃ§in bir rÃ¶lesi olarak Ã§alÄ±ÅÄ±r - iki taraf arasÄ±ndaki iletiÅim bu sunucular Ã¼zerinden aktarÄ±lÄ±r.",
        "differentNetworkStep5": "Dosya transferi, TURN sunucularÄ±mÄ±z aracÄ±lÄ±ÄÄ±yla gizli ve Åifreli bir Åekilde gerÃ§ekleÅir.",
        "technicalDetailsTitle": "Teknik Detaylar:",
        "technicalDetailsText": "FoxFile, Åu teknolojileri kullanarak gÃ¼venli baÄlantÄ±larÄ± saÄlar:",
        "technicalDetailWebRTC": "WebRTC: TarayÄ±cÄ± tabanlÄ± gerÃ§ek zamanlÄ± iletiÅim iÃ§in",
        "technicalDetailSTUN": "STUN SunucularÄ±: NAT arkasÄ±ndaki cihazlarÄ±n gerÃ§ek adreslerini keÅfetmek iÃ§in",
        "technicalDetailTURN": "TURN SunucularÄ±: DoÄrudan baÄlantÄ± kurulamadÄ±ÄÄ±nda trafiÄi yeniden yÃ¶nlendirmek iÃ§in",
        "technicalDetailDTLS": "DTLS: Veri kanalÄ± iÃ§in aktarÄ±m katmanÄ± gÃ¼venliÄi",
        "technicalDetailAES": "AES-GCM: Dosya iÃ§eriÄinin uÃ§tan uca Åifrelenmesi",
        "analyticsTitle": "Analitik:",
        "analyticsText": "GizliliÄe odaklÄ± bir analitik aracÄ± olan GoatCounter kullanÄ±yoruz:",
        "analyticsNoCookies": "Ãerez kullanÄ±lmaz",
        "analyticsAnonymous": "IP adresleri anonimleÅtirilerek Ã¼lke bazlÄ± lokasyon bilgisi saÄlanÄ±r",
        
        // Terms and Privacy
        "termsTitle": "KullanÄ±cÄ± SÃ¶zleÅmesi ve Gizlilik PolitikasÄ±",
        "termsOfService": "KullanÄ±cÄ± SÃ¶zleÅmesi",
        "termsDate": "YÃ¼rÃ¼rlÃ¼k Tarihi: 20 Nisan 2025",
        "termsPartiesTitle": "1. Taraflar ve Kabul",
        "termsPartiesText": "Bu sÃ¶zleÅme, [Foxfile.org] ('Platform') ile Platform'u kullanan gerÃ§ek veya tÃ¼zel kiÅi ('KullanÄ±cÄ±') arasÄ±nda akdedilmiÅtir. KullanÄ±cÄ±, Platform'a eriÅim saÄlayarak veya hizmetleri kullanarak bu sÃ¶zleÅmenin tÃ¼m hÃ¼kÃ¼mlerini okuduÄunu, anladÄ±ÄÄ±nÄ± ve kabul ettiÄini beyan eder.",
        "termsServiceTitle": "2. Hizmetin TanÄ±mÄ±",
        "termsServiceText": "Platform, kullanÄ±cÄ±lar arasÄ±nda Åifreli ve anlÄ±k dosya paylaÅÄ±mÄ± saÄlayan bir aracÄ± hizmet sunmaktadÄ±r. PaylaÅÄ±lan dosyalar Platform sunucularÄ±nda depolanmaz; yalnÄ±zca kullanÄ±cÄ±lar arasÄ±nda doÄrudan iletilir.",
        "termsConditionsTitle": "3. KullanÄ±m KoÅullarÄ±",
        "termsConditions1": "3.1. KullanÄ±cÄ±, Platform'u yalnÄ±zca yasalara uygun amaÃ§larla kullanmayÄ± taahhÃ¼t eder.",
        "termsConditions2": "3.2. KullanÄ±cÄ±, Platform Ã¼zerinden paylaÅtÄ±ÄÄ± tÃ¼m iÃ§eriklerin yasalara uygun olduÄunu ve Ã¼Ã§Ã¼ncÃ¼ taraflarÄ±n haklarÄ±nÄ± ihlal etmediÄini garanti eder.",
        "termsConditions3": "3.3. KullanÄ±cÄ±, Platform'u kullanÄ±rken aÅaÄÄ±daki eylemlerden kaÃ§Ä±nacaktÄ±r:",
        "termsConditionsItem1": "Telif hakkÄ± veya diÄer fikri mÃ¼lkiyet haklarÄ±nÄ± ihlal eden iÃ§eriklerin paylaÅÄ±lmasÄ±",
        "termsConditionsItem2": "MÃ¼stehcen, saldÄ±rgan, yanÄ±ltÄ±cÄ± veya yasa dÄ±ÅÄ± iÃ§eriklerin paylaÅÄ±lmasÄ±",
        "termsConditionsItem3": "KÃ¶tÃ¼ amaÃ§lÄ± yazÄ±lÄ±m, virÃ¼s veya benzeri zararlÄ± iÃ§eriklerin paylaÅÄ±lmasÄ±",
        "termsDisclaimerTitle": "4. Sorumluluk Reddi",
        "termsDisclaimer1": "4.1. Platform, kullanÄ±cÄ±lar tarafÄ±ndan paylaÅÄ±lan iÃ§eriklerin doÄruluÄu, gÃ¼venliÄi veya yasallÄ±ÄÄ± konusunda herhangi bir sorumluluk kabul etmez.",
        "termsDisclaimer2": "4.2. KullanÄ±cÄ±, Platform'u kullanarak gerÃ§ekleÅtirdiÄi tÃ¼m iÅlemlerden ve paylaÅÄ±mlardan mÃ¼nhasÄ±ran sorumludur.",
        "termsDisclaimer3": "4.3. Platform, hizmetin kesintisiz veya hatasÄ±z olacaÄÄ±nÄ± garanti etmez ve hizmetin kullanÄ±mÄ±ndan doÄabilecek doÄrudan veya dolaylÄ± zararlardan sorumlu tutulamaz.",
        "termsIntellectualTitle": "5. Fikri MÃ¼lkiyet HaklarÄ±",
        "termsIntellectualText": "Platform'da yer alan tÃ¼m iÃ§erikler, tasarÄ±mlar, yazÄ±lÄ±mlar ve diÄer materyaller Platform'a aittir ve telif hakkÄ± yasalarÄ±yla korunmaktadÄ±r. KullanÄ±cÄ±, Platform'un yazÄ±lÄ±mÄ±nÄ±, tasarÄ±mÄ±nÄ± veya iÃ§eriÄini izinsiz olarak kopyalayamaz, daÄÄ±tamaz veya deÄiÅtiremez.",
        "termsModificationTitle": "6. SÃ¶zleÅmenin DeÄiÅtirilmesi",
        "termsModificationText": "Platform, bu sÃ¶zleÅme hÃ¼kÃ¼mlerini dilediÄi zaman tek taraflÄ± olarak deÄiÅtirme hakkÄ±nÄ± saklÄ± tutar. GÃ¼ncellenen sÃ¶zleÅme, Platform'da yayÄ±nlandÄ±ÄÄ± tarihte yÃ¼rÃ¼rlÃ¼Äe girer ve KullanÄ±cÄ±, Platform'u kullanmaya devam ederek gÃ¼ncellenen sÃ¶zleÅmeyi kabul etmiÅ sayÄ±lÄ±r.",
        "termsJurisdictionTitle": "7. Uygulanacak Hukuk ve Yetki",
        "termsJurisdictionText": "Bu sÃ¶zleÅme, TÃ¼rkiye Cumhuriyeti yasalarÄ±na tabidir. Taraflar, bu sÃ¶zleÅmeden doÄabilecek her tÃ¼rlÃ¼ uyuÅmazlÄ±ÄÄ±n Ã§Ã¶zÃ¼mÃ¼nde Ä°stanbul (ÃaÄlayan) Mahkemeleri ve Ä°cra Daireleri'nin yetkili olduÄunu kabul eder.",
        
        "privacyTitle": "Gizlilik PolitikasÄ±",
        "privacyCollectionTitle": "1. Toplanan Veriler",
        "privacyCollectionText": "Platform, kullanÄ±cÄ±larÄ±n kimliklerini belirlemeye yÃ¶nelik kiÅisel verileri toplamaz. Ancak, hizmetin saÄlanabilmesi iÃ§in IP adresleri ve baÄlantÄ± zamanlarÄ± gibi teknik veriler geÃ§ici olarak kaydedilebilir.",
        "privacyUseTitle": "2. Verilerin KullanÄ±mÄ±",
        "privacyUseText": "Toplanan teknik veriler, yalnÄ±zca hizmetin gÃ¼venliÄini saÄlamak ve yasal yÃ¼kÃ¼mlÃ¼lÃ¼kleri yerine getirmek amacÄ±yla kullanÄ±lÄ±r. Bu veriler, Ã¼Ã§Ã¼ncÃ¼ taraflarla paylaÅÄ±lmaz, satÄ±lmaz veya ticari amaÃ§larla kullanÄ±lmaz.",
        "privacyStorageTitle": "3. Verilerin SaklanmasÄ±",
        "privacyStorageText": "Toplanan teknik veriler, yasal zorunluluklar dÄ±ÅÄ±nda belirli bir sÃ¼re saklanmaz ve dÃ¼zenli olarak silinir.",
        "privacyThirdPartyTitle": "4. ÃÃ§Ã¼ncÃ¼ Taraf BaÄlantÄ±larÄ±",
        "privacyThirdPartyText": "Platform, Ã¼Ã§Ã¼ncÃ¼ taraf web sitelerine baÄlantÄ±lar iÃ§erebilir. Bu sitelerin gizlilik uygulamalarÄ±ndan Platform sorumlu deÄildir. KullanÄ±cÄ±lar, bu sitelerin gizlilik politikalarÄ±nÄ± incelemelidir.",
        
        // Terms Checkbox
        "termsCheckboxLabel": "KullanÄ±cÄ± SÃ¶zleÅmesi ve Gizlilik PolitikasÄ±'nÄ± okudum ve kabul ediyorum",
        "termsLink": "SÃ¶zleÅmeyi Oku",
        "termsCheckboxRequired": "Dosya paylaÅmak iÃ§in KullanÄ±cÄ± SÃ¶zleÅmesi'ni kabul etmelisiniz"
    }
};

// Theme configuration
const themes = {
    light: {
        backgroundColor: "#f9fafb",
        cardBackgroundColor: "#ffffff",
        textColor: "#111827",
        secondaryTextColor: "#4b5563",
        accentColor: "#4f46e5",
        accentHoverColor: "#4338ca",
        borderColor: "#e5e7eb",
        inputBackgroundColor: "#f9fafb",
        successColor: "#10b981",
        successHoverColor: "#059669",
        errorColor: "#ef4444",
        infoBackgroundColor: "#f3f4f6"
    },
    dark: {
        backgroundColor: "#111827",
        cardBackgroundColor: "#1f2937",
        textColor: "#f9fafb",
        secondaryTextColor: "#d1d5db",
        accentColor: "#6366f1",
        accentHoverColor: "#4f46e5",
        borderColor: "#374151",
        inputBackgroundColor: "#374151",
        successColor: "#10b981",
        successHoverColor: "#059669",
        errorColor: "#ef4444",
        infoBackgroundColor: "#374151"
    }
};

// Get user's preferred language
function getPreferredLanguage() {
    // Check if language is stored in localStorage
    const storedLang = localStorage.getItem('preferredLanguage');
    if (storedLang && translations[storedLang]) {
        return storedLang;
    }
    
    // Check browser language
    const browserLang = navigator.language.split('-')[0];
    return browserLang === 'tr' ? 'tr' : 'en';
}

// Get user's preferred theme
function getPreferredTheme() {
    // Check if theme is stored in localStorage
    const storedTheme = localStorage.getItem('preferredTheme');
    if (storedTheme && (storedTheme === 'light' || storedTheme === 'dark')) {
        return storedTheme;
    }
    
    // Check system preference
    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
    }
    
    return 'light';
}

// Set language
function setLanguage(lang) {
    if (!translations[lang]) {
        lang = 'en';
    }
    
    localStorage.setItem('preferredLanguage', lang);
    document.documentElement.setAttribute('lang', lang);
    
    // Update all text elements with translations
    document.querySelectorAll('[data-i18n]').forEach(element => {
        const key = element.getAttribute('data-i18n');
        if (translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });
    
    // Update placeholders
    document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
        const key = element.getAttribute('data-i18n-placeholder');
        if (translations[lang][key]) {
            element.setAttribute('placeholder', translations[lang][key]);
        }
    });
}

// Set theme
function setTheme(theme) {
    if (!themes[theme]) {
        theme = 'light';
    }
    
    localStorage.setItem('preferredTheme', theme);
    document.documentElement.setAttribute('data-theme', theme);
    
    // Apply theme colors to CSS variables
    const root = document.documentElement;
    Object.entries(themes[theme]).forEach(([property, value]) => {
        root.style.setProperty(`--${property}`, value);
    });
}

// Toggle language
function toggleLanguage() {
    const currentLang = localStorage.getItem('preferredLanguage') || getPreferredLanguage();
    const newLang = currentLang === 'tr' ? 'en' : 'tr';
    setLanguage(newLang);
}

// Toggle theme
function toggleTheme() {
    const currentTheme = localStorage.getItem('preferredTheme') || getPreferredTheme();
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    setTheme(newTheme);
}

// Initialize language and theme
function initializeSettings() {
    const preferredLanguage = getPreferredLanguage();
    const preferredTheme = getPreferredTheme();
    
    setLanguage(preferredLanguage);
    setTheme(preferredTheme);
    
    // Listen for system theme changes
    if (window.matchMedia) {
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
            // Only change theme if user hasn't manually set a preference
            if (!localStorage.getItem('preferredTheme')) {
                setTheme(e.matches ? 'dark' : 'light');
            }
        });
    }
}

// --- Start: Added RTC Configuration Function ---
async function getRTCConfiguration() {
    console.log("Fetching TURN credentials from server...");
    try {
        const response = await fetch('/api/turn-credentials');
        if (!response.ok) {
            throw new Error(`Server responded with ${response.status}`);
        }
        const credentials = await response.json();
        console.log("Received TURN credentials:", credentials.username);

        const configuration = {
            iceServers: [
                // Ãnce STUN sunucularÄ± (opsiyonel ama Ã¶nerilir)
                { urls: 'stun:stun.l.google.com:19302' },
                { urls: 'stun:stun1.l.google.com:19302' },
                
                // Sunucudan alÄ±nan dinamik TURN bilgileri
                {
                    urls: [
                        `turn:foxfile.org:3478?transport=udp`,
                        `turn:foxfile.org:3478?transport=tcp`
                    ],
                    username: credentials.username,
                    credential: credentials.credential
                }
            ]
        };
        return configuration;

    } catch (error) {
        console.error("Failed to fetch TURN credentials, falling back to STUN only:", error);
        // Hata durumunda sadece STUN ile devam et
        return {
            iceServers: [
                { urls: 'stun:stun.l.google.com:19302' },
                { urls: 'stun:stun1.l.google.com:19302' },
            ]
        };
    }
}
// --- End: Added RTC Configuration Function ---

// Expose functions and data to the global scope via window.appConfig
window.appConfig = {
    translations,
    themes,
    getPreferredLanguage,
    getPreferredTheme,
    setLanguage,
    setTheme,
    toggleLanguage,
    toggleTheme,
    initializeSettings,
    getRTCConfiguration
};